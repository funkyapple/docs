{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>A longe time ago, the apple was unknown to man. </p> <p>A collection of guides to setup a server or even your Macbook. </p> <ul> <li> <p>Dive into  Servers</p> <p>The quickest way to get started, and to get your head around the basics.</p> </li> <li> <p>Kick it with  macOS</p> <p>Been around for a while? Got a high pain threshold? Jump in!</p> </li> <li> <p>Geek out in  Discord</p> <p>Join the fun, chat with fellow apples in realtime!</p> </li> <li> <p>Take a look at my  Blog!</p> <p>Life's too short. Read the blog. </p> </li> </ul> <p>A major shoutout to The Geek Coolbook who largely inspired me to get into servers. I'd like to thing of myself as the idiots guide. I even copied his home page. </p>"},{"location":"#what-this-guide-hopes-to-achieve","title":"What this guide hopes to achieve?","text":"<p>I'd like to think of this as a documentation of my journey. Hopefully you learn along the way. </p>"},{"location":"#disclaimer","title":"Disclaimer","text":"<p>I am not associated with Apple\u2122 in any way or form. My username just contains the word apple. </p>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2024/01/31/hello-world/","title":"Hello world!","text":"<p>... </p>"},{"location":"macos/","title":"Developer","text":"<p>A installation guide for setting up your mac for programming</p>"},{"location":"macos/#introduction","title":"Introduction","text":"<p>Setting up your Mac for optimal performance is key to productivity. This is what this guide tries accomplish. I've compiled all the little tidbits of information I've gathered over time and put it into this guide.</p>"},{"location":"macos/#what-this-isnt-meant-to-be","title":"What this isn't meant to be","text":"<p>This guide isn't meant to be for everyone. Feel free to tweak it to your need.</p>"},{"location":"macos/#a-note-on-security","title":"A Note on Security \ud83d\udd10","text":"<p>Security is super important when you're a developer. All programs I discuss here are well reviewed development tools; some of which have even been audited by Mozilla. That being said, it is important that you assess the risks yourself. When considering something, is it too good to be true? It usually is. Just note, nothing on the internet is 100% safe. Technically Microsoft could be hacked or the file download be intercepted and corrupted (hence why its always important to check the checksum of everything). Throughout this guide I'll provide my tips for staying safe. Without further ado, lets begin.</p>"},{"location":"macos/#useful-resource","title":"Useful resource","text":"<p>A resource I stumbled upon is the following guide hosted on github. Although I haven't gone through all of it, I have definately looked at it often to see what it advises.</p> <pre><code>https://sourabhbajaj.com/mac-setup/\n</code></pre>"},{"location":"macos/#installing-homebrew","title":"Installing HomeBrew \ud83c\udf7a","text":"<p>Something you're going to want to install right off the bat is Homebrew. Why? Simply put it going to be the back end to keeping all your development software up to date and on top of that it autochecks the checksum of downloaded files. It is a must have!</p> <p>To install homebrew simply run the following command.</p> <pre><code>/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n</code></pre> <p>If you want to setup your mac for multiuser usage then checkout https://medium.com/@leifhanack/homebrew-multi-user-setup-e10cb5849d59</p>"},{"location":"macos/#some-useful-commandline-tools","title":"Some useful commandline tools","text":""},{"location":"macos/#wget","title":"wget","text":"<p>Wget is a super useful commandline that can download basically anything on the internet. It is often installed by default on most Linux systems and will be used later to set up the terminal.</p> <pre><code>brew install wget\n</code></pre> <p>The python shipped with most Macs is often outdated. To install the most recent version run the code below. Note, to develop with multiple python versions you will want to use pyenv. See HERE for more info.</p> <pre><code>brew install python3\n</code></pre> <p>Update: I would actualy recommend using <code>pyenv</code> to manage python versions rather than <code>brew</code>. However, may program will require <code>brew</code>'s python so you might as well install it. </p>"},{"location":"macos/#gnu-screen","title":"GNU screen","text":"<p>The GNU Project tools lead to the family of operating systems now known as Linux. They have many useful packages. One that I took a look at it called <code>screen</code>. I personally don't use it but some seem to enjoy it. Take a look into it and see if its for you.</p> <pre><code>brew install screen\n</code></pre>"},{"location":"macos/#gnu-screen-alternative-tmux","title":"GNU Screen Alternative (<code>tmux</code>)","text":"<p>I personally didn't get into GNU screen and instead began using <code>tmux</code>. Why? I just found it easier to use and figure out. They are relatively similar. I do enjoy the integration with <code>iTerm</code> however which you can read about here. To install:</p> <pre><code>brew install tmux\n</code></pre>"},{"location":"macos/#speedtest","title":"Speedtest","text":"<p>There are a couple speedtest options out there, an open source one called <code>speedtest-cli</code> and a CLI created by Ookla. I chose the latter and installed it as follows which can be found on their website. You can install using the commands below:</p> <pre><code>brew tap teamookla/speedtest\nbrew update\nbrew install speedtest --force\n</code></pre>"},{"location":"macos/#alternate-shasum-command","title":"Alternate shasum command","text":"<p><code>shasum -a 256 [filename]</code> has been essential to me for a long time. However, some websites (specifically arch linux) verify downloads using other methods. If you ever find yourself in this situation, one such package is as follows:</p> <pre><code>brew install gnupg\n</code></pre>"},{"location":"macos/#alternate-top","title":"Alternate top","text":"<p>The default top on Mac (run <code>top</code> in the terminal) isn't super intuitive. I personally prefer <code>htop</code> which is often found on Linux distributions.</p> <pre><code>brew install htop\n</code></pre>"},{"location":"macos/#updated-nano","title":"Updated nano","text":"<p>Nano on Mac is severely out of date and lacks many new features. To get the updated version simple run the following command. (Note: When installing a package on Mac that already exists using homebrew, the system chooses the homebrew option although both still exist in the same place. To revert to the old version, simply run <code>brew uninstall [package]</code>)</p> <pre><code>brew install nano\n</code></pre>"},{"location":"macos/#network-scanner","title":"Network Scanner","text":"<p>A tool I like to use to scan my network for unknown devices is nmap. It's super useful and been around for ages. Again, installtion is made a breeze with Homebrew by running the following command:</p> <pre><code>brew install nmap\n</code></pre>"},{"location":"macos/#system-about-neofetch","title":"System About: neofetch","text":"<p>I really like this handy little tool. Displays system information while looking nice. What's not to like? You can actually see it in use in the image at the top of this page!</p>"},{"location":"macos/#fuzzy-search-aka-fzf","title":"Fuzzy Search (aka <code>fzf</code>)","text":"<p>To be frank, this is a widely used tool that I haven't utilized too much... mainly due to being too lazy to learn a new command. Nevertheless I've heard of what it can do and plan to use it in the future.</p> <pre><code>brew install fzf\n</code></pre>"},{"location":"macos/#other-useful-terminal-applications","title":"Other Useful Terminal Applications","text":"<p>I have a bunch of fun and experiment terminal applications installed that I play around with. I've included that in another document!</p>"},{"location":"macos/#open-source-media-tools","title":"Open Source Media Tools","text":""},{"location":"macos/#gimp","title":"Gimp","text":"<p>When developing applications, it is often useful to be able to modify images. GIMP may be the best free and open source tool to do that. It may not have all the bells and whistles of Adobe Photoshop, but it doesn't cost a penny and will get the job done.</p> <pre><code>brew install --cask gimp\n</code></pre>"},{"location":"macos/#inkscape","title":"Inkscape","text":"<p>Inkscape is a vector editor similar to Adobe Illustrator except is is open source. I haven't needed it too much but could come in handy!</p> <pre><code>brew install --cask inkscape\n</code></pre>"},{"location":"macos/#audacity","title":"Audacity","text":"<p>Another useful tool is Audacity which deals with audio files. Be careful to download from the official website however. There was a time where a fake website was the top search instead of the official one. Link to Official Site</p>"},{"location":"macos/#blender","title":"Blender","text":"<p>This tool is a unique one. It enables the user to create 3D models and even animate them. Pretty neat!</p> <pre><code>brew install --cask blender\n</code></pre> <p>Last time I tried using <code>Brew</code> however something went wrong... sigh. So I manually installed it from the website.</p>"},{"location":"macos/#vlc","title":"VLC","text":"<p>Finally, VLC is such a staple when it comes to open source software I just had to install it.</p> <pre><code>brew install --cask vlc\n</code></pre>"},{"location":"macos/#a-vlc-alternative-iina","title":"A VLC Alternative: IINA","text":"<p>I truly love VLC for what it is. It is great when qeuing videos. I've definetely used it when cramming professor's lectures. The one thing it lacks however is polish. It feels very open source. Which is fine... just sometimes I want an application that feels native to macOS. This is when I found IINA. This is an open source modern feeling video player with tons of capabilities. It reminds me of Quicktime. You can install it with:</p> <pre><code>brew install --cask iina\n</code></pre>"},{"location":"macos/#setup-terminal-emulator-iterm2","title":"Setup Terminal Emulator (<code>iTerm2</code>)","text":"<p>iTerm2 is a great alternative to the default terminal that comes on Mac. It also has better color support and is my personal favorite emulator. I highly recommend. On top of that it was audited by Firefox!</p> <pre><code>brew install --cask iterm2\n</code></pre> <p>Next, you'll want to set up zsh which comes by default on newer Macs. To install if you don't have it, run the following command:</p> <pre><code>brew install zsh\n</code></pre> <p>If you want to setup brew completions in zsh then check out https://docs.brew.sh/Shell-Completion#configuring-completions-in-zsh</p> <p>The next couple steps are optional but recommended if you want a fantastic looking terminal.</p> <p>Install Oh-My-Zsh:</p> <pre><code>sh -c \"$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n</code></pre>"},{"location":"macos/#powerline-fonts","title":"Powerline Fonts","text":"<p>Some of the themes won't work unless you have a mono font. I recommend powerline fonts which you can clone and then run as follows:</p> <pre><code>git clone https://github.com/powerline/fonts.git\n</code></pre> <p>And run:</p> <pre><code>./install.sh\n</code></pre> <p>I personally like the <code>Hack</code> font. You can change the font in iTerm by going to <code>Preferences</code> (\u2318+,) and chaning the <code>Text</code> attributes under <code>Profiles</code>.</p>"},{"location":"macos/#plugins","title":"Plugins","text":"<p>Although there are many plugin managers out there for zsh, I have chosen just to use the default oh-my-zsh framework. There are two methods to do this as shown below.</p>"},{"location":"macos/#method-1","title":"Method 1","text":"<p>Finally, clone the following two repositories into the Oh-My-Zsh plugins folder (or simply install with Homebrew and point source to install folder)</p> <pre><code>git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions\n</code></pre> <pre><code>git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\n</code></pre> <p>Enable plugins by adding the names to the plugin section of the .zshrc file localed in your Home folder.</p> <pre><code>plugins=(git zsh-autosuggestions zsh-syntax-highlighting)\n</code></pre> <p>I have attached my .zshrc configuration to this repository in Files.</p>"},{"location":"macos/#method-2","title":"Method 2","text":"<p>These two plugins can also be installed using Homebrew or git in another folder. To add these to zsh you'd want to add the following lines to your .zshrc configuration file replacing the path</p>"},{"location":"macos/#zsh-autosuggestions","title":"Zsh-Autosuggestions","text":"<pre><code>brew install zsh-autosuggestions\n</code></pre>"},{"location":"macos/#zsh-syntax-highlighting","title":"Zsh-Syntax-Highlighting","text":"<pre><code>brew install zsh-syntax-highlighting\n</code></pre> <p>Add sources to <code>.zshrc</code></p> <pre><code>source [path]/zsh-syntax-highlighting.zsh\nsource [path]/zsh-autosuggestions.zsh\n</code></pre>"},{"location":"macos/#fix-common-error-by-adding-to-zshrc","title":"Fix common error by adding to <code>.zshrc</code>","text":"<p>I got some complaints when I first set this all up. Below are some fixes to those problems. Plus I also include how to add <code>brew</code> completions to <code>zsh</code>.</p> <pre><code>ZSH_DISABLE_COMPFIX=\"true\"\n</code></pre> <p>You'll want to add <code>brew</code> completions as well by adding the following:</p> <pre><code>if type brew &amp;&gt;/dev/null; then\n  FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH\n\n  autoload -Uz compinit\n  compinit\nfi\n</code></pre> <p>Run <code>chmod -R go-w \"$(brew --prefix)/share\"</code> if you get an error about insecure directories.</p> <p>Finally you will want to change the theme and perhaps add some aliases. Take a look at my script.</p>"},{"location":"macos/#github-development","title":"Github Development","text":"<p>I think the reocurring theme you can take away from programmers is that we are lazy. Why make something that already exists. There are a two commandline tools that come to mind: git and gh. What's the difference? Take a look at What is the difference between git and Github CLI or gh? I think you'll find it enlightening.</p> <p>To be frank, I have only really used git. I don't have the time to learn the official Github CLI (maybe one day though \ud83e\udd14). To make my life even easier, I just use the Github Desktop application. There are other that are more advanced but I haven't needed them yet.</p>"},{"location":"macos/#getting-ready-your-code-editors","title":"Getting Ready your Code Editors","text":""},{"location":"macos/#sublime-text","title":"Sublime Text","text":"<p>Sublime Text is a classic and widely used text editor. I primarily use it to make quick fixes and then use Visual Studio Code for development. In fact, I am writing this guide in sublime text right now.</p> <pre><code>brew install --cask sublime-text\n</code></pre> <p>There are many things you can change in Sublime Text. All I've done is changed the theme and a couple other settings including spell check:</p> <p><pre><code>{\n    \"color_scheme\": \"Packages/Color Scheme - Default/Mariana.sublime-color-scheme\",\n    \"theme\": \"Adaptive.sublime-theme\",\n    \"spell_check\": true,\n    \"dictionary\": \"Packages/Language - English/en_US.dic\",\n    \"font_size\": 13,\n    \"font_face\": \"Source Code Pro for Powerline Regular\"\n}\n</code></pre> Note: Configuration file included</p>"},{"location":"macos/#visual-studio-code","title":"Visual Studio Code","text":"<p>Visual Studio Code might be one of the most useful code editors and can easily become a fully featured IDE for most languages.</p> <pre><code>brew install --cask visual-studio-code\n</code></pre> <p>Type <code>\u2318\u21e7P</code> and then search <code>install extensions</code> and hit <code>ENTER</code>. From here, I usually just install the Python extension by Microsoft. Feel free to customize your install however you want. It'd be good to select the python interpreter we just installed above. Something I usually do, is set up iTerm integration. I do this by adding the following to <code>.json</code> file found here in settings:</p> <p>Navigate to:</p> <p></p> <p>And add the last four lines (the first two were added when we changed in the python interpreter.</p> <pre><code>{\n    \"python.pythonPath\": \"/usr/local/Cellar/python@3.9/3.9.0_1/Frameworks/Python.framework/Versions/3.9/bin/python3.9\",\n    \"terminal.integrated.automationShell.osx\": \"\",\n    \"terminal.external.osxExec\": \"iTerm.app\",\n    \"terminal.explorerKind\": \"external\",\n    \"terminal.integrated.fontFamily\": \"Source Code Pro for Powerline\",\n    \"workbench.colorTheme\": \"Solarized Dark\"\n\n}\n</code></pre> <p>Note: Configuration file included and also install python package</p>"},{"location":"macos/#plugins_1","title":"Plugins","text":"<p>VSCode has tons of useful plugins. Their usefulness will vary depending on your use case. I find it helpful to google what others have used depending on what you are developing.</p> <p>Here are a couple guides on setting up VSCode to look nice:</p> <ul> <li>A Guide to Beautifying Visual Studio Code</li> <li>Making Visual Studio Code Better \ud83d\udd25\u2728\ud83d\udee0</li> </ul> <p>These are the extensions I use:</p> <ul> <li>Prettier -&gt; makes code look nice</li> <li>Beautify -&gt; like Prettier but for HTML</li> <li>Bracket Pair Colorizer 2 -&gt; helps with seeing paired brackets</li> <li>Github Theme -&gt; nice theme</li> <li>Material Icons -&gt; pretty sweet icon pack</li> <li>Python</li> <li>Pylance</li> <li>C/C++</li> <li>Arduino</li> <li>Jupyter</li> <li>Live Share -&gt; super useful for real time collab</li> <li>Github Pull Requests -&gt; good for github integration</li> <li>Markdown All in One -&gt; amazing markdown extension</li> <li>Markdown Preview Enhanced -&gt; better markdown preview (don't use the one from Microsoft! I found it glitchy)</li> <li>markdownlint</li> <li>docs-markdown -&gt; some markdown shortcuts cause I'm lazy</li> <li>docs-linting -&gt; you don't need this... I installed it and then realized it messed up my other linter (why Micrsoft? Why?). Too lazy to debug removing it so I left it installed. Works nicely with <code>markdownlint</code>.</li> </ul> <p>I tried the <code>Docs Authoring Pack</code> extension by Microsoft. It's essentially a pack of extensions to help with Markdown. The included previewer was glitchy so tried to remove. Tons of glitches removing! Huge pain! Got stuck in a dependancy loop... oh the joys. Finally removed and kept linter as explained above.</p>"},{"location":"macos/#vim-setup","title":"Vim Setup","text":"<p>Something you're bound to be exposed to as you do development is Vim. Although it isn't my go to editor, it is super handy to know how to use. I'd recommend the following guide on using Vim: Guide</p> <p>Make sure you have the most recent version of Vim</p> <pre><code>brew install vim\n</code></pre>"},{"location":"macos/#setting-up-the-vimrc-file","title":"Setting up the <code>.vimrc</code> file","text":"<p>The <code>.vimrc</code> file is found in your <code>Home</code> directory. It's possible to use Vim without modifying anything. I personally used the following guides to create my own personal setup:</p> <p>https://github.com/romainl/idiomatic-vimrc https://github.com/amix/vimrc</p>"},{"location":"macos/#useful-virtualization-tools","title":"Useful Virtualization Tools","text":"<p>If you ever have to containerize applications or test things out, I'd recommend the following two pieces of software:</p> <ol> <li>Docker</li> <li>VMware Fusion</li> </ol> <p>I used to recommend Virtualbox by Oracle for OS virtualization, however with the update to Big Sur I encountered a bunch of issues getting it installed. In addtion I found the software not optimized for mac and getting the Guest Additions setup was a pain. VMware has been in the hypervisor business for ages and VMware fusion is their specific Mac version of their VMware workstation. Not only does it run so much faster than Virtualbox, it is so much easier to setup. They do have a premium version of their software, but just of September 2020, they made the lower tier free for noncommercial use. </p> <p>Both of Docker and Vmware Fusion are useful in their own way and I'd recommend reading their wikis to see if they'd be useful to you.</p>"},{"location":"macos/#installation","title":"Installation","text":"<pre><code>brew install --cask docker\n</code></pre> <pre><code>brew install --cask virtualbox\n</code></pre>"},{"location":"macos/#installing-alfred","title":"Installing Alfred","text":"<p>Alfred is search tool of choice for Mac. It does cost quite abit upfront and I'd recommend paying a little bit extra for the lifetime updates, especiialy if you plan to use it long term. It's still in active development and as such receives frequent updates.</p> <p>Alfred and iTerm2</p> <p>To get Alfred to work with iTerm2, the developer recommended the following script:</p> <p>https://github.com/vitorgalvao/custom-alfred-iterm-scripts</p> <p>To get more info about Alfred see Alfred.md</p> <p>To be Added Still in the works</p>"},{"location":"macos/#mac-keyboard-home-and-end-buttons","title":"Mac Keyboard Home and End Buttons","text":"<p>An annoying problem in macOS is that the Home and End buttons don't work as expected. A solution to this is provided on Apple Stack Exchange. You can find my file in Files</p>"},{"location":"macos/#python-packges","title":"Python Packges","text":"<p>I think I will be moving this to a second of its own. </p>"},{"location":"macos/Software/","title":"Software","text":"<p>Once the system is installed and basic setup is completed (see HERE), it is time to install some basic software that is essential for productivity and getting tasks done. The way I generally setup my mac is that all development or open source software is handled by package managers, while everything else is installed directly from the developer websites. Why might you do that one might ask? It comes down to security. I do banking and access other highly sensitive data while doing my work on say Google Chrome or MS Word. If there is a security bug with one of these pieces of software, I want the most up to date version I can get.</p> <p>In addition, I generally only update Homebrew every two weeks. Now, you could argue that I could just set auto update up on Homebrew and that usually Chrome and MS Word is at the latest version within hours on brew. This would be true. But I still have the issue that these pieces of software are \"smart.\" They auto update themself and this could break Homebrew updates to that package which would be a mess (I had an Homebrew software break once due to another issue and it was a pain). Again one could also counter argue this by saying that I should just disable auto update. The problem is that this isn't usually very easy to do, if downright impossible. As a result, for simplicity sake, I don't use Homebrew for everything.</p>"},{"location":"macos/Software/#content","title":"Content","text":"<ul> <li>Software</li> <li>Content</li> <li>Browser<ul> <li>Extensions</li> <li>Ad Blocker</li> <li>1Password</li> <li>Save it for Later</li> <li>Privacy</li> </ul> </li> <li>Privacy<ul> <li>Password Manager</li> <li>2FA Authentication</li> <li>Malware Scanner</li> </ul> </li> <li>Productivity<ul> <li>Reference Manager</li> <li>Kanban</li> <li>Spotlight Replacement</li> <li>Microsoft Office</li> </ul> </li> <li>Entertainment<ul> <li>Spotify</li> <li>IINA (alt VLC)</li> <li>TV App</li> </ul> </li> <li>Utilities<ul> <li>Keyboard Software</li> <li>Bartender</li> <li>Magnet</li> <li>iStat Menus</li> <li>Adobe Acrobat Reader</li> </ul> </li> </ul>"},{"location":"macos/Software/#browser","title":"Browser","text":"<p>The very first thing I download on any computer is Google Chrome. Why? Well most of the websites I use (Zoom and Google) don't always work properly on Safari. Plus, my default extensions (which are open source) aren't available on Safari and I don't trust any of the smaller closed source projects (there is a long history of web browser extensions containing malware).</p> <p>The Move to Firefox</p> <p>I recently switched from Google Chrome to Firefox. I found that Chrome just wasn't integrating very well with 1Password. I wasn't willing to go to Safari as I'd lose some key add-ons discussed below. I love Firefox! It is fast and the new update looks amazing! Combo that with a great theme and you're set.</p>"},{"location":"macos/Software/#extensions","title":"Extensions","text":"<p>I find certain extensions absolutely vital to my workflow. An ad blocker is one of them.</p>"},{"location":"macos/Software/#ad-blocker","title":"Ad Blocker","text":"<p>Ads are annoying and can be malicious. As a result I generally like to block these ads with a ad blocker. There are many sketchy ad blockers out there so it was hard deciding a safe one to use. I finally decides upon uBlock Origin which has a large community and is open source. In addition, it's been around for a long time and is super secure. Plus, it does so much more than just block ads. It also blocks pop ups, malicious redirects, and can even block java script. Be sure not to get it from a website. There is a fake one called ublock dot org. The actual software is hosted on github and can be downloaded through the Chrome extension store. The fake website also has a fake extension called ublock on the extension store. Be wary! It is a fraud! Only download uBlock Origin which has about 10M downloads.</p>"},{"location":"macos/Software/#1password","title":"1Password","text":"<p>I discuss this below, but recently I switched to 1Password. The extension for Firefox is absolutely amazing. I haven't looked back since.</p> <p>Note: I used to have the Bitwarden extension installed</p>"},{"location":"macos/Software/#save-it-for-later","title":"Save it for Later","text":"<ul> <li>Zotero Connector - super handy for saving files/webpages to Zotero</li> <li>Instapaper - great read-it-later service (could also use Pocket as built in integration with Firefox)</li> <li>OneNote Web Clipper - save articles to OneNote</li> </ul>"},{"location":"macos/Software/#privacy","title":"Privacy","text":"<ul> <li>Privacy Badger - fantastic tracker blocker</li> <li>HTTPS Everywhere - keep you safe on websites by forcing encryption</li> <li>ExpressVPN - for use on public networks</li> </ul>"},{"location":"macos/Software/#privacy_1","title":"Privacy","text":""},{"location":"macos/Software/#password-manager","title":"Password Manager","text":"<p>Once Google Chrome is install, I want to be able to access all my passwords which are stored in a password manager. I personally use Bitwarden and haven't regretted it at all. It's open source and mostly free (unless you need some specific features). I tried LastPass which I felt was outdated, bloated, and has had way too many breaches for my liking. Another good one I've heard good things about is 1Password.</p>"},{"location":"macos/Software/#2fa-authentication","title":"2FA Authentication","text":"<p>I like to always enable 2-factor authentication when I can. I used to use <code>Google Authenticator</code> but then switched to <code>Authy</code> as they have a desktop app which is useful.</p>"},{"location":"macos/Software/#malware-scanner","title":"Malware Scanner","text":"<p>For detecting Malware, I use Malwarebytes. It was recommended to me by Apple Support as well as a local computer store. They have a free version which does everything you'll need except auto scan. Unless you want to pitch out $40 a year to autoscan, just get the free version. </p>"},{"location":"macos/Software/#productivity","title":"Productivity","text":""},{"location":"macos/Software/#reference-manager","title":"Reference Manager","text":"<p>I am in university, and as such I need to use references in most of my essays. I use an open source piece of software called Zotero which is compadibly with Google Docs, Word, and Libre Office. In addition it has a Chrome and Firefox extension to save articles and websites to the manager.</p>"},{"location":"macos/Software/#kanban","title":"Kanban","text":"<p>For time management, I use a piece of software called Trello. You can just use the web version, but I also got the desktop version (they also have a phone app) from the macOS app store.</p>"},{"location":"macos/Software/#spotlight-replacement","title":"Spotlight Replacement","text":"<p>Spotlight is great, but no where as powerful as Alfred. With Alfred, I can auto expand text and search custom set websites. Navigate directories and create custom workflows. I might add an entire article to this repository alone (see here)</p>"},{"location":"macos/Software/#microsoft-office","title":"Microsoft Office","text":"<p>Yes, you can use LibreOffice... but I don't because university requires specific features of excel. Plus you get 1 TB of free storage so I'm not complaining.</p>"},{"location":"macos/Software/#entertainment","title":"Entertainment","text":""},{"location":"macos/Software/#spotify","title":"Spotify","text":"<p>I could use Apple Music, but I enjoy Spotify better. Hence I use this to listen to Music.</p>"},{"location":"macos/Software/#iina-alt-vlc","title":"IINA (alt VLC)","text":"<p>I mention this in the Developer section, but IINA and VLC are two good video players.</p>"},{"location":"macos/Software/#tv-app","title":"TV App","text":"<p>Apple has a pretty good TV app in which you can buy movies and tv shows. I like it and use it to buy media. </p>"},{"location":"macos/Software/#utilities","title":"Utilities","text":""},{"location":"macos/Software/#keyboard-software","title":"Keyboard Software","text":"<p>I use a logitech keyboard and as such I usually download Logitech Options. Not much to say here.</p>"},{"location":"macos/Software/#bartender","title":"Bartender","text":"<p>Once you've settled into using your Mac, the menu bar begins to get messy. You could simply remove icons but I find myself running into two problems. The first is that some icons I want to use only occationally. The second is that some menu bar items cannot be removed (cough cough OneDrive) and in addition add a new icon for every single account! The solution? Mac Bartender is a staple that's been around for a while. Super customizable. Essentially enables you to hide icons until you hover your mouse over it. Very useful!</p>"},{"location":"macos/Software/#magnet","title":"Magnet","text":"<p>Apple has done great at some things... but really bad in others. In my opinion, they handle window management fairly well until it comes to window snapping. For those that don't know, in Windows 10, when you drag your window to the edge of the screen, it can snap to either a half or full screen etc. MacOS lacks that feature and this is what Magnet does. It's the third most downloaded app in the app store and I believe it won an award from Apple for top innovators (don't quote me on it).</p>"},{"location":"macos/Software/#istat-menus","title":"iStat Menus","text":"<p>Having my CPU stats in the menu bar is something I miss from Linux. It's great. You can see if your CPU is being used. In addition has tons of cool features like fan control and weather stats.</p>"},{"location":"macos/Software/#adobe-acrobat-reader","title":"Adobe Acrobat Reader","text":"<p>I am not a huge fan of Adobe for their high subscription prices and clunky software. I will admit however it's helpful to have their PDF viewer installed. I usually just use the default Preview.</p> <p>To be continued...</p>"},{"location":"macos/Uninstalling%20Software/","title":"Uninstall Software on your Mac","text":"<p>Plenty of people are going to tell you than you need some magical uninstaller to remove programs on your Mac. The problem is most of these programs contain PUPs and malware... the exact opposite of what they advertise as!</p> <p>I wrote the following answer to a question on Super User in which I explain my process of uninstalling an app from macOS. In this example I talk about <code>Iterm2</code>. Keep in mind that this set of steps can be applied anywhere (and yes they spelled \"from\" wrong \ud83d\ude44)</p> <p>How to uninstall iTerm form the mac?</p> <p>I've pasted my reply below:</p> <p>You need to provide more information on your issue. As Tetsujin linked, you can simply go to <code>/Applications</code> and move the <code>iTerm</code> app to the trash (see HERE). This is how you uninstall all macOS applications (unless you are using Homebrew). Any internet search can show you this step by step.</p> <p>Now, I am guessing that you want to also uninstall all the hidden files that <code>iTerm</code> creates on your computer. I would recommend taking a look at this tread which shows some other hidden file locations:</p> <pre><code>    caches files in ~Library/Caches\n    preferences files in ~Library/Preferences\n    log files in ~Library/Logs\n    Other files in\n        ~Library/Containers\n        ~Library/Cookies\n        ~Library/Address Book Plug-Ins\n        ~Library/Saved Application State\n        ~private/var/db/BootCaches\n</code></pre> <p>You could manually delete iTerm's folders within these one at a time. Just be sure not to accidentally delete anything important to another application.</p> <p>Now, you mentioned that you didn't install using Homebrew. I think you can still uninstall an application with Homebrew even if you didn't use Homebrew to install it. Usually using Brew you could just run:</p> <pre><code>brew uninstall --force iterm\n</code></pre> <p>You can add <code>--zap</code> to get rid of hidden files in the <code>~/Library</code> folder:</p> <pre><code>brew uninstall --force --zap iterm\n</code></pre> <p>If you don't have Homebrew, you can always go to the website. Search <code>iTerm</code> and select <code>cask code</code>. Then delete the files under zap trash from your computer after you've moved the iTerm application to the trash.</p> <pre><code>zap trash: [\n    \"~/Library/Application Support/iTerm\",\n    \"~/Library/Application Support/iTerm2\",\n    \"~/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.googlecode.iterm2.sfl*\",\n    \"~/Library/Caches/com.googlecode.iterm2\",\n    \"~/Library/Cookies/com.googlecode.iterm2.binarycookies\",\n    \"~/Library/Preferences/com.googlecode.iterm2.plist\",\n    \"~/Library/Saved Application State/com.googlecode.iterm2.savedState\",\n  ]\n</code></pre>"},{"location":"macos/Utilities/","title":"Utilities","text":"<p>In the Mac ecosystem, there can be found a whole array of useful utilities that can help boost productivity. Not all of them are necessary but I have found many of them helpful. How does this differ from the Developer section of this guide? Well it's more focused on polished and less technical utilities that doesn't involve coding. Make no mistake however, some of the tool presented here are super powerful and versitile.</p>"},{"location":"macos/Utilities/#istat-menus","title":"iStat Menus","text":"<p>Being able to view critical pieces of information about the status of your various computer components is super useful. I can tell if the CPU is being maxed and in additon what is utilizing it within a couple seconds. It's like activity monitor but embedded in your menu bar. It's one of the features I miss about my Linux setup. Definetely would recommend.</p>"},{"location":"macos/Utilities/#fantastical","title":"Fantastical","text":"<p>For some, seeing the calendar and being able to interact with it from the Menu bar is absolutely essential. In addition, the natural language processing is absolutely amazing. There is also a great Alfred workflow to quickly add events to the calendar using this natural language processing.</p>"},{"location":"macos/Utilities/#bartender","title":"Bartender","text":""},{"location":"macos/ebook-management/","title":"Ebook Management","text":"<p>The best way to manage your Ebooks is using a tool called Calibre. It is compatible with Kindle, Kobo, and a whole slu of other products. The reason it is so much more powerful that the default Kindle or Kobo desktop application is that it isn't locked into any ecosystem. You can convert any file format and even remove the DRMs (with the help of a plugin) from ebooks.</p> <p>Note: Removing DRMs is a illegal in some jurisdictions. In addition, the file that the DRM is removed from should never be used for piracy. Use this guide at your own risk.</p> <p>It is important to keep in mind that I use macOS and a Kindle. This guide can still be used for other scenarios, but some of the plugins I use are Kindle specific.</p>"},{"location":"macos/ebook-management/#content","title":"Content","text":"<ul> <li>Ebook Management</li> <li>Content</li> <li>Installation</li> <li>DeDRM</li> <li>Plugins</li> </ul>"},{"location":"macos/ebook-management/#installation","title":"Installation","text":"<p>Although Calibre can be installed using the link on the website, I prefer using a package manager. As I am on macOS, I prefer to use Homebrew. With Brew installed, this can be achieved by running:</p> <p>brew install --cask calibre</p> <p></p> <p>Calibre once launched</p>"},{"location":"macos/ebook-management/#dedrm","title":"DeDRM","text":"<p>Apprentice Alf has created a plugin called DeDRM_tools for Calibre to remove book DRMs. He has a wordpress blog that you can check out sometime. The plugin however is hosted on Github at the following link: https://github.com/apprenticeharper/DeDRM_tools</p> <p>If you need help with installing plugins, I'd recommend you take a look at their online guide. There are also countless guides online to help you with that. To use the plugin, check out: https://github.com/apprenticeharper/DeDRM_tools/wiki/Exactly-how-to-remove-DRM</p>"},{"location":"macos/ebook-management/#plugins","title":"Plugins","text":"<p>There's a great guide on Reddit that goes over some basics you can setup: https://www.reddit.com/r/kindle/comments/3b7dzl/tutorial_how_to_use_calibre_to_manage_book/</p> <pre><code>[TUTORIAL] How to use calibre to manage book library and Kindle (or any E-Readers)\nI haven't seen any Calibre tutorial, so today I'll share some knowledge to use the basic functions of Calibre in an organized way.\n\nIf you want to use Calibre right away, follow Setting up Calibre using Welcome Wizard and Using Calibre to manage books. Other sections are only intended for aesthetics problems and ease of using in the long run.\n\nRequirement:\n\nCalibre\n\nKindle\n\nAn Amazon and GMX account (If you want to use Send-to-Kindle to send document wirelessly to your Kindle)\n\nA micro-USB cable\n\nAnd a working internet connection.\n\n.\n\nSetting up Calibre using Welcome Wizard:\n\nCreate a new empty folder using your library's desired name\n\nLaunch Calibre and choose that folder.\n\nNext, Choose your device. If you choose Kindle, go to step 4. If you choose other e-readers, go to step 6. If you don't want to set up Send-to-Kindle, go to step 6.\n\nGo to Amazon's Manage Your Content and Devices, choose Settings, find Personal Document Settings. Take note of the Send-to-Kindle E-Mail (ending with @Kindle,com). Find Add a new approved e-mail address and type in your GMX email.\n\nIn the Next dialog on Calibre welcome wizard, type in your Kindle email. Press Use GMX and type in your GMX credentials.\n\nNext, and you are done.\n\n.\n\nSetting up your Calibre:\n\nSelect Preferences\n\nChoose Behavior, set Preferred output format to AZW3 (if you're using Kindle) or EPUB (if you're using other devices). The reason is that AZW3 and EPUB can make use of Calibre's Edit Book function. Apply.\n\nChoose Add your own columns, press the \"+\" button. Setup the following:\n\nPages (For Count Pages plugin, to get page number on your books):\n\nLookup name: pages\n\nColumn heading: Pages\n\nColumn type: Integers.\n\nFormat for numbers: {0,}\n\nShelf (To manage your reading progress):\n\nLookup name: shelf\n\nColumn heading: Shelf\n\nColumn type: Text, column shown in the tag browser.\n\nChoose Common Options, Look &amp; Feel, set Embed font famlly to your preferred font. I choose Bookerly here. Note: I have no problem using Bookerly on the Kindle 7th Gen, but for the older generations, there might be some issues. The font will be in the Publisher's Font option on the Kindle.\n\nChoose Saving books to disk, Copy and paste the following to the Save template: 1. Books/{author_sort}/{title}/{title} - {authors}\n\nChoose Sending books to devices, Copy and paste the following to the Save template: 1. Books/{author_sort}/{title}/{title} - {authors}\n\nChoose Metadata plugboards, Add new plugboard\n\nFormat: any format\n\nDevice: any device\n\nSource template: {series:|| - }{series_index:0&gt;5.2f|[|] - }{title}\n\nThis will save your books like this: Harry Potter - [01.00] - Harry Potter and the Sorcerer's Stone if your book is in a series, or Oliver Twist if your book isn't.\n\nYou can look here for more options\n\nDestination field: title\n\nChoose Plugins, find Kindle 2/3/4/Touch/PaperWhite/Voyage Device Interface, set:\n\nSave templates: 1. Books/{author_sort}/{title}/{title} - {authors}\n\nCustom column name to retrieve page counts from: #pages\n\nDisable Overwrite existing apnx on device\n\nClose, and restart Calibre\n\n.\n\nAdding plug-ins to power-up your Calibre:\n\nSelect Preferences, choose Plugins\n\nChoose Get new plugins\n\nFind and install Goodreads and Count Pages\n\nFind Count Pages plugin, double click, under Page count options, choose Custom column: #pages. Leave the others blank.\n\nNotes: This only gives you a rough estimation of the books. If you want a more accurate version, use Amazon books, or use the built-in Download page counts from Goodreads\n\nApply.\n\nGo to Metadata download, and choose Goodreads\n\nApply, and Restart Calibre.\n\n.\n\nUsing Calibre to manage books:\n\nAdd books: You can Drag-and-drop the ebook files to Calibre, or use the Add books function.\n\nEdit metadata: You can type in your books' metadata manually, or download the data using Download metadata buttons. Calibre will automatically search book's data and you can choose the matching title.\n\nConvert books: When sending to Kindle, Calibre'll automatically convert your books to Kindle readable formats, but it won't store the file locally. You can convert individually, or bulk convert to save the metadata directly to your books\n\nIf you connect Kindle to Calibre, Calibre will automatically find books on your Kindle. To send books to your Kindle, press Send to device.\n\nFetch news: You can choose your favorite news source from the menu, Press Schedule for download, choose days to download, and Save. Calibre will automatically download News IF IT IS RUNNING and send to your Kindle if you already set up Send-to-Kindle account.\n\nThere you go. Now you're ready to use Calibre like a pro. If you have any problems, feel free to contact me.\n</code></pre> <p>Some other plugins you can install are:</p> <ul> <li>EpubMerge - merges epubs</li> <li>EpubSplit - splits epubs</li> <li> <p>FanFicFare - download fan fiction</p> </li> <li> <p>KFX Input - convert amazon kfx to epub or mobi</p> </li> <li> <p>KFX Output - convert mobi or epub to amazon kfx</p> </li> <li> <p>Count Pages - count pages in book</p> </li> <li>Extract ISBN - find ISBN listed in book and add as attribute</li> <li>Fantastic Fiction - add Fantastic Fiction as source for metadata</li> <li>Favourites Menu - hides extra menu options in pop down to clean up Calibre</li> <li>Find Duplicates - finds duplicates in library</li> <li>Generate Cover - generates customizable covers for ebooks</li> <li>Goodreads add https://www.goodreads.com/ as source for metadata download</li> <li>Manage Series - easy way to order series of ebooks</li> <li>Modify ePub - quick method of modifying many common attributes of ebooks</li> <li>Quality Check</li> <li>Reading List</li> <li>Search The Internet</li> </ul> <p>Some others you can check out:</p> <ul> <li>Resize Cover</li> <li>Quick Preferences</li> <li>Annotations</li> <li>Overdrive Link</li> <li>View Manager</li> </ul>"},{"location":"macos/python/","title":"Python Setup Guide","text":"<p>Getting python setup on macOS can be slightly annoying. This is mainly because you do not want to mess with the default installation as that can cause issues as some programs require it as a dependancy. At this point you've also installed python through brew. This is helpful as programs that require an up to date version of python will use this. For development however, you want an isolated version. Let's begin. </p> <p>Install <code>pyenv</code>:</p> <pre><code>brew install pyenv\n</code></pre> <p>If you're using <code>zsh</code> take a look at </p>"},{"location":"server/","title":"Getting Started","text":"<p>Docker makes the world go round... almost. Before you begin playing with servers, you first need to get some basics under your belt. First learn how to use the command line. This is pretty much essential. Unless you are using unraid, most servers run on some form of linux.</p> <p>You can take a look at The Linux Command Handbook. Start by learning how to use <code>cd</code> and <code>ls</code> to navigate the file tree. Then you can get fancy with all the other commands. You tend to just pick them up over time. </p> <p>Another essential is learning docker. I made the mistake of just trying docker without knowing how it worked. It caused me so much pain and headache. Don't make the same mistake. Again, use the The Docker Handbook by freeCodeCamp. It's amazing. Read through the first couple sections to get a sense of how docker works. You won't really need to know how to build your own containers as most of the time we will be using premade containers. But still, its helpful to understand how docker works. Then skip to docker compose. This is what you will be using most of the time. </p> <p>Okay, so you are now ready to begin. </p>"},{"location":"server/hosting/","title":"Hosting Providers","text":"<p>I would recommend if you're just getting started to start with a VPS. What is a VPS? VPS stands for virtual private server. Basically that means that </p>"},{"location":"server/wireguard/","title":"Wireguard","text":"<p>I ended up using <code>wg-easy</code> to create Wireguard tunnels for some family and friends that need a VPN occationally. I attempted to install wireguard directly to gain some performance benefits. I kept having routing issues (I suspect something was going funky with tailscale). </p>"},{"location":"server/wireguard/#client-configure","title":"Client configure","text":"<p>Download <code>.conf</code> file and load into wireguard client downloaded from. </p>"},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/category/hello/","title":"Hello","text":""},{"location":"blog/category/world/","title":"World","text":""}]}